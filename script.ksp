
{***********************************************
Change Pitch with Note Range & 1st note Timing
Author: Native Instruments
Written by: Nicki Marinic, Dominik Svoboda
Modified: October 14, 2022
*************************************************}
on init
    make_perfview
    
    {****Range & Change pitch****}
    
    declare ui_switch $learn_button
    declare ui_switch $bypass_button
    declare ui_switch $V_C
	set_text($learn_button,"Learn Keyrange")
    set_text($bypass_button,"Bypass Pitch")
    set_text($V_C,"Velocity to CC 1")
	declare $learn_counter
	declare $a
    declare ui_label $label_1 (1,1)
	set_text ($label_1,"Note range")
    make_persistent ($V_C)
    declare ui_value_edit $Min (0,127,$VALUE_EDIT_MODE_NOTE_NAMES)
  	$Min := 24
	make_persistent ($Min)
    declare ui_value_edit $Max (0,127,$VALUE_EDIT_MODE_NOTE_NAMES)
  	$Max := 48
	make_persistent ($Max)
    set_script_title("Change Pitch w/ Range")
	set_ui_height(2)
	message("")
	
	declare polyphonic $transposition {transposition interval in Semitones}
	declare polyphonic $transposed_note {note number of transposed note}
    
	declare ui_knob $Semi (-11, 11, 1)
	$Semi := 0
	set_knob_defval ($Semi,0)
	make_persistent ($Semi)
	set_knob_unit ($Semi,$KNOB_UNIT_ST)
	move_control ($Semi,3,3)
	set_control_help ($Semi,"Semi: Transposes incoming MIDI notes in semitones.")
	
	declare ui_knob $Octave (-10, 10, 1)
	$Octave := 0
	set_knob_defval ($Octave,0)
	make_persistent ($Octave)
	set_knob_unit ($Octave,$KNOB_UNIT_OCT)
	move_control ($Octave, 2, 3)
	set_control_help ($Octave,"Octave: Transposes incoming MIDI notes in octaves.")
	
	declare ui_label $label1 (1,1)
	set_text ($label1,"Transpose")
	move_control ($label1,1,3)
	
	declare ui_label $MIDI_label (3,1)
	set_text ($MIDI_label,"MIDI")
	move_control ($MIDI_label,1,2)
	move_control ($bypass_button, 4,4)
	move_control ($V_C, 4,3)
    
    {****Timing****}
    
    declare ui_switch $Bypass
    declare $i
    declare $n
    declare $pressed
	declare polyphonic $Delayed_Note
    $i := 0
    $n := 0
    $pressed := 0
    declare ui_label $info (1,1)
	move_control ($info,5,1)
    set_text ($info, "Timing in (ms):")
	set_text ($Bypass, "Bypass Timing")
	move_control ($Bypass,6,1)
    declare ui_knob $1st_note (0,200,1)
	move_control ($1st_note,5,2)
    $1st_note := 0
    make_persistent ($1st_note)
    
end on

on ui_control ($Min)
	if ($Min > $Max)
		$Max := $Min
	end if
end on

on ui_control ($Max)
	if ($Max < $Min)
		$Min := $Max
	end if
end on

on note

    {Key Range}
    
	if ($learn_button = 1)
		if ($learn_counter = 0)
			$Min := $EVENT_NOTE
			inc($learn_counter)
		else
			$Max := $EVENT_NOTE
			$learn_counter := 0
			$learn_button := 0
			
			if ($Min > $Max)
				$a := $Max
				$Max := $Min
				$Min := $a
			end if
		end if
		ignore_event($EVENT_ID)
		exit
	end if
	
	{End Key Range}
    
    $transposition := ($Octave * 12) + $Semi 
    $transposed_note := $EVENT_NOTE + $transposition
    
	
	if ($transposed_note < 0)
		$transposed_note := 0
	end if
	
	if ($transposed_note > 127)
		$transposed_note := 127
	end if
    
    if ($Bypass = 0)
        ignore_event($EVENT_ID)
        message($n)
        if ($n=0)
            $n:=1
            wait($1st_note*1000+1)
        end if
        if ($bypass_button = 0)
            change_note($EVENT_ID,$transposed_note)
        end if
        $Delayed_Note := play_note ($EVENT_NOTE, $EVENT_VELOCITY, 0, -1)
    end if
    
    if ($bypass_button = 0)
        if (in_range($EVENT_NOTE,$Min,$Max))
            change_note($EVENT_ID,$transposed_note)
            if ($V_C = 1)
                change_velo($EVENT_ID, %CC[1])
            end if
        end if
	end if
    
end on

on release
    if ($Bypass = 0)
        ignore_event($EVENT_ID)
        if ($n=0)
            wait($1st_note*1000+1)
        end if
        note_off ($Delayed_Note)
        while ($i<128)
            if (%KEY_DOWN[$i]=1)
                $pressed := 1
                $n := $n + 1
            end if
            inc($i)
        end while
        if ($pressed = 0)
            $n := 0
        end if
        $i := 0
        $pressed := 0
    end if
end on

